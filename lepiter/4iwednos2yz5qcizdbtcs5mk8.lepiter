{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:15:33.1655+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:15:59.077407+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "P5Jj2B39DQCyHTr7D42JWg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "[[Alterning player turns]]\n\n[[Avoid marked squares]]\n\n[[Detect winner]]\n\n[[Finish when game over]]\n\n[[Detect draw]]"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-07T16:21:19.485232+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-07T16:22:30.415142+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "j8ucAvT8DQCng/nABsRuTA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The Tic Tac Toe game is very simple and it requires only a few rules to be implemented:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-07T16:24:40.5794+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-07T16:25:34.131971+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "2PEpC/T8DQCp1PoLBsRuTA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We define the following b-thread to manage the alterning player turns."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-07T16:25:44.173765+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-07T16:51:22.972738+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "WjwkFPT8DQCuM91lBsRuTA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "The b-thread will control which player is moving so it's not required that the GUI sends the *player* value inside the *move* event's data."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-07T16:29:47.8252+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-07T16:58:10.333296+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "v78RI/T8DQCyygHNBsRuTA=="
							},
							"code" : "btAlterningTurns := 'bp.registerBThread(\"TurnManager\", function(){\n    var moveES = bp.EventSet(\"move\", function(evt) {\n\t    return (evt.data == null) ? false : evt.name == \"move\";\n    });\n    while (true) {\n        // X''s turn\n        var xMove = bp.sync({ waitFor: moveES });\n        bp.sync({ request:bp.Event(\"moveAccepted\",\n            { \"player\": \"X\",\n\t          \"row\": xMove.data.row,\n\t          \"col\": xMove.data.col })\n        });\n\n        // O''s turn\n        var oMove = bp.sync({ waitFor: moveES });\n        bp.sync({ request:bp.Event(\"moveAccepted\",\n            { \"player\": \"O\",\n\t          \"row\": oMove.data.row,\n\t          \"col\": oMove.data.col })\n        });\n    }\n});'"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-07T16:37:05.699187+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-07T16:37:21.720899+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "pywrPfT8DQCsUe8oAiCXkA=="
										},
										"code" : "game := (Gt4BpTicTacToeExamples new emptyGame)\r\tloadBThread: btAlterningTurns named: 'alterningTurns.js';\r\tstart."
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-07T16:37:28.123538+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-07T16:37:30.40009+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "81eBPvT8DQCtCo5eAiCXkA=="
										},
										"code" : "game stop"
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-07T17:26:56.020844+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-07T17:27:12.040848+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "IN1n7/T8DQC6uXObCyEUPA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We can test the logic with the following snippet:"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-07T17:33:22.000242+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T12:41:17.456676+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "/3BpBvX8DQC81oryCyEUPA=="
										},
										"code" : "Gt4BpTicTacToeExamples compile: '\rbtAlterningTurns\r\t^ ''bp.registerBThread(\"TurnManager\", function(){\n    var moveES = bp.EventSet(\"move\", function(evt) {\n\t    return (evt.data == null) ? false : evt.name == \"move\";\n    });\n    while (true) {\n        // X turn\n        var xMove = bp.sync({ waitFor: moveES });\n        bp.sync({ request:bp.Event(\"moveAccepted\",\n            { \"player\": \"X\",\n\t          \"row\": xMove.data.row,\n\t          \"col\": xMove.data.col })\n        });\n\n        // O turn\n        var oMove = bp.sync({ waitFor: moveES });\n        bp.sync({ request:bp.Event(\"moveAccepted\",\n            { \"player\": \"O\",\n\t          \"row\": oMove.data.row,\n\t          \"col\": oMove.data.col })\n        });\n    }\n});''' classified: #'example - support'.\r\rGt4BpTicTacToeExamples compile: '\ralterningTurnsGame\r\t<gtExample>\r\t| game |\r\tgame := self emptyGame.\r\tgame loadBThread: self btAlterningTurns named: ''test-AlterningTurns.js''.\r\t^ game' classified: #example.\r\t\rGt4BpTicTacToeExamples compile: '\rscripterWithAlterningTurnsGame\r\t<gtExample>\r\t<return: #BlScripter>\r\t| game aScripter |\r\tgame := self alterningTurnsGame.\r\taScripter := self newScripter.\r\taScripter\r\t\tmodel: game; \r\t\telement: game asElement.\r\t\t\r\t[ aScripter\r\t\tdoStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Starts the game'';\r\t\t\t\tblock: [ :model | model start ];\r\t\t\t\tonModel ].\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Click on the first cell'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 1 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Click on the sixth cell'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 6 ].\r\r\taScripter wait\r\t\tlabel: ''Waits for the state is updated'';\r\t\tforElementCondition: [ :gameElement | \r\t\t\t\t(gameElement children\r\t\t\t\t\tselect: [ :eachCell | (eachCell label asString = '''') not ]) size = 2 ]\r\t\t\ttimeout: 2 seconds;\r\t\tonSpaceRoot;\r\t\t// #board asBlocElementId;\r\t\tplay.\r\r\taScripter\r\t\tcheckStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Check that the first cell is labeled with X'';\r\t\t\t\tvalue: [ :button | button label asString ] equals: [ ''X'' ];\r\t\t\t\t// BrButton;\r\t\t\t\t@ 1 ].\r\t\t\t\t\r\taScripter\r\t\tcheckStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Check that the sixth cell is labeled with O'';\r\t\t\t\tvalue: [ :button | button label asString ] equals: [ ''O'' ];\r\t\t\t\t// BrButton;\r\t\t\t\t@ 6 ] \r\t] ensure: [ \r\t\taScripter\r\t\t\tdoStep: [ :s | \r\t\t\t\ts\r\t\t\t\t\tlabel: ''Stop the game'';\r\t\t\t\t\tblock: [ :model | model stop ];\r\t\t\t\t\tonModel ] ].\r\t\t\r\t^ aScripter' classified: #example."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-07T17:44:30.86384+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-07T17:44:52.752641+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "n31HLvX8DQC/LckiCyEUPA=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "We can check the example we've just created:"
									},
									{
										"__type" : "exampleSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-07T17:45:16.010893+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-07T17:45:16.010893+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "q1/4MPX8DQCAIdO3CyEUPA=="
										},
										"exampleSelector" : "scripterWithAlterningTurnsGame",
										"previewHeight" : 200,
										"previewShowSelector" : "gtViewsFor:",
										"exampleBehaviorName" : "Gt4BpTicTacToeExamples",
										"codeExpanded" : true,
										"previewExpanded" : false,
										"noCode" : false
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-07T17:27:33.978395+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-07T17:33:18.073432+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "dgWr8fT8DQC7sOc3CyEUPA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Or we can convert it into an example with assertions:"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-07T16:22:52.244439+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-07T16:24:02.247452+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "RkRjCfT8DQCpSPwQBsRuTA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "##Alterning player turns"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-07T18:01:07.313976+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-08T11:37:35.22191+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "eFx8S/X8DQCCFrTeCyEUPA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We need to avoid further marking of a square already marked by X or O.\n\nWe can define **a b-thread for each square** that first waits for a move (X or O) in that position and then blocks any other move to the same position:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-07T18:02:06.132177+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-08T11:36:10.999796+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "7JstbfX8DQCEhStYCyEUPA=="
							},
							"code" : "squareTakenBlock := [ :row :col | \r\t'bp.registerBThread(\"SquareTaken(' , row , ',' , col\r\t\t, ')\", function() {\n    var moveToSquareES = bp.EventSet(\"moveToSquare\", function(evt) {\n        return (evt.name == \"move\") &&\n            (evt.data.row == '\r\t\t, row , ') &&\n            (evt.data.col == ' , col\r\t\t, ');\n    });\n    bp.sync({ waitFor: moveToSquareES });\n    bp.sync({ block: moveToSquareES });\n});' ].\r\rbtSquareTaken := ''.\r\r1 to: 3 do: [ :row | \r\t1 to: 3 do: [ :col | \r\t\tbtSquareTaken := btSquareTaken , \r\t\t\t(squareTakenBlock value: row asString value: col asString) , \r\t\t\tString crlf,\r\t\t\tString crlf ] ].\r\rbtSquareTaken"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-07T20:24:57.671247+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-07T20:25:23.111873+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "JusUbPf8DQC1+dEpDIWGoQ=="
										},
										"code" : "game := (Gt4BpTicTacToeExamples new alterningTurnsGame)\r\tloadBThread: btSquareTaken named: 'squareTaken.js';\r\tstart."
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-07T20:25:34.961288+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-07T20:25:37.802741+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "OOtNbvf8DQC22uAGDIWGoQ=="
										},
										"code" : "game stop"
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-08T11:37:47.605993+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-08T11:39:22.781248+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "6s2fLAT9DQCBJcTPCqcQZw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We now check the game working with the alternating turns logic and the new 9 b-threads  (one per each square) we've just defined:"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-08T11:42:17.354255+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-08T11:43:01.913823+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "edKzPAT9DQCRU5VmD/jyfQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "First, we write a supporting method to define the b-thread Javascript source code, as we did in a previous snippets:"
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-08T11:43:08.621349+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-08T11:47:51.567401+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "xxvCPwT9DQCUaK+5D/jyfQ=="
										},
										"code" : "Gt4BpTicTacToeExamples compile: '\rbtSquareTaken\r\t| squareTakenBlock btSquareTakenCode | \r\tsquareTakenBlock := [ :row :col | \r\t\t''bp.registerBThread(\"SquareTaken('' , row , '','' , col , '')\", function() {\n\t    var moveToSquareES = bp.EventSet(\"moveToSquare\", function(evt) {\n\t        return (evt.name == \"move\") &&\n\t            (evt.data.row == '' , row , '') &&\n\t            (evt.data.col == '' , col , '');\n\t    });\n\t    bp.sync({ waitFor: moveToSquareES });\n\t    bp.sync({ block: moveToSquareES });\n\t});'' ].\r\r\tbtSquareTakenCode := ''''.\r\t\r\t1 to: 3 do: [ :row | \r\t\t1 to: 3 do: [ :col | \r\t\t\tbtSquareTakenCode := btSquareTakenCode , \r\t\t\t\t(squareTakenBlock value: row asString value: col asString) , \r\t\t\t\tString crlf,\r\t\t\t\tString crlf ] ].\r\t\t\t\r\t^ btSquareTakenCode' classified: #'example - support'."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-08T11:48:12.304174+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-08T11:53:52.660659+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "I/HbUQT9DQCXhBhPD/jyfQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Now we can write an example that returns the game with the rules we have implemented until now, i.e. alterning turns and square taken:"
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-08T11:49:07.825161+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-08T11:50:06.589927+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "cR0rVQT9DQCagWU+D/jyfQ=="
										},
										"code" : "Gt4BpTicTacToeExamples compile: '\ralterningAndSquareTakenGame\r\t<gtExample>\r\t| game |\r\tgame := self alterningTurnsGame.\r\tgame loadBThread: self btSquareTaken named: ''test-SquareTaken.js''.\r\t^ game' classified: #example."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-08T11:54:06.173033+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-08T11:55:16.005341+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "Lo3zZgT9DQCSsWUJBsaFdA=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Finally, in order to check the expected behavior we write an example using the {{gtClass:name=BlScripter}} to control the game's UI and check its state:"
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-08T11:55:21.681852+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T12:42:04.272148+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "u7lzawT9DQCWEqaaBsaFdA=="
										},
										"code" : "Gt4BpTicTacToeExamples compile: '\rscripterWithSquareTakenGame\r\t<gtExample>\r\t<return: #BlScripter>\r\t| game aScripter |\r\tgame := self alterningAndSquareTakenGame.\r\taScripter := self newScripter.\r\taScripter\r\t\tmodel: game; \r\t\telement: game asElement.\r\t\t\r\t[ aScripter\r\t\tdoStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Starts the game'';\r\t\t\t\tblock: [ :model | model start ];\r\t\t\t\tonModel ].\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Click on the first cell'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 1 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Click again on the first cell'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 1 ].\r\r\taScripter wait\r\t\tlabel: ''Waits for the state is updated'';\r\t\tforElementCondition: [ :gameElement | \r\t\t\t\t(gameElement children\r\t\t\t\t\tselect: [ :eachCell | (eachCell label asString = '''') not ]) size = 1 ]\r\t\t\ttimeout: 2 seconds;\r\t\tonSpaceRoot;\r\t\t// #board asBlocElementId;\r\t\tplay.\r\r\taScripter\r\t\tcheckStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Check that the first cell is labeled with X'';\r\t\t\t\tvalue: [ :button | button label asString ] equals: [ ''X'' ];\r\t\t\t\t// BrButton;\r\t\t\t\t@ 1 ].\r\t] ensure: [ \r\t\taScripter\r\t\t\tdoStep: [ :s | \r\t\t\t\ts\r\t\t\t\t\tlabel: ''Stop the game'';\r\t\t\t\t\tblock: [ :model | model stop ];\r\t\t\t\t\tonModel ] ].\r\t\t\r\t^ aScripter' classified: #example."
									},
									{
										"__type" : "exampleSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-08T22:12:35.362559+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-08T22:12:35.362559+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "PNfUCg39DQClmKU5AOTgrA=="
										},
										"exampleSelector" : "scripterWithSquareTakenGame",
										"previewHeight" : 200,
										"previewShowSelector" : "gtViewsFor:",
										"exampleBehaviorName" : "Gt4BpTicTacToeExamples",
										"codeExpanded" : true,
										"previewExpanded" : false,
										"noCode" : false
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-08T11:40:39.440092+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-08T11:42:12.533775+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "2sjdNgT9DQCFISQECqcQZw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "As always, we convert the previous test into new examples with automatic assertions."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-07T17:51:50.074219+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-07T18:00:56.498587+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "n051SPX8DQCBfseoCyEUPA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "##Avoid marked cells"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-08T22:23:44.802384+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-08T22:29:21.458173+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "Y/cbHA39DQCHs5oxDcuAmA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "In order to detect if a player wins the game we create a group of b-threads, each of them waiting for an specific player placing her tokens in the squares of a particular line (horizontal, vertical or diagonal) and possible permutation.\n\nIn the 3x3 game we have the following 8 lines (3 horizontal lines, 3 vertical lines and 2 diagonal lines):"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-08T22:29:25.889727+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:13:04.562316+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "gEIQRw39DQCTAGItDcuAmA=="
							},
							"code" : "horizontals := {\r    { 1@1 . 1@2 . 1@3 } .\r    { 2@1 . 2@2 . 2@3 } .\r    { 3@1 . 3@2 . 3@3 } }.\r    \rverticals := {\r    { 1@1 . 2@1 . 3@1 } .\r    { 1@2 . 2@2 . 3@2 } .\r    { 1@3 . 2@3 . 3@3  } }.\r    \rdiagonals := {\r    { 1@1 . 2@2 . 3@3 } .\r    { 1@3 . 2@2 . 3@1  } }.\r    \rlines := horizontals , verticals , diagonals"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-08T23:01:03.001583+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-08T23:25:13.73642+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "dOIjuA39DQCwaQFABmMFfg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Each of these 8 lines can be completed in any order, so a player can win completing the line in any of the following 48 possible permutations:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-08T23:02:00.66688+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T00:08:16.384423+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "o8qTuw39DQCza0bEBmMFfg=="
							},
							"code" : "linePermutations := OrderedCollection empty.\rlines do: [ :line |\r\tline permutationsDo: [:each | linePermutations add: each copy ].\r].\rlinePermutations"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-08T23:26:27.95635+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T11:09:27.683331+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "E9QIEw79DQC+14kRBMk7pw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We can define the following b-threads to check the player X win conditions:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-08T23:28:49.585872+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T11:10:15.512379+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "BPJ5Gw79DQC/qTfDBMk7pw=="
							},
							"code" : "bThreadsXWin := linePermutations collect: [ :aLine | \r\t'bp.registerBThread(\"XWin(', aLine asString ,')\", function() {' , \r\tString crlf ,\r\t(aLine flatCollect: [ :aPosition |\r\t    '    bp.sync({ waitFor: bp.EventSet(\"X', aPosition asString ,'\", function(e) {' , String crlf ,\r\t    '        return e.name == \"moveAccepted\" && ', String crlf ,\r\t    '            e.data.player == \"X\" && ' , String crlf ,\r\t    '            e.data.row == ', aPosition x asString , ' && ' , String crlf ,\r\t    '            e.data.col == ', aPosition y asString , '; ', String crlf ,\r\t    '         }) }); ' , String crlf\r\t]) ,\r\t'    bp.sync({ request: bp.Event(\"gameOver\", { winner: \"X\" }) }); ', String crlf ,\r'}); ', String crlf , String crlf\t\t\t\t\t\t ].\r\rbtXWin := String streamContents: [ :stream |\r\tbThreadsXWin do: [ :bThread | stream nextPutAll: bThread ] ]"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T11:09:32.597384+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T11:09:46.758567+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "f2Zv5Rf9DQCe4M//Cd3GbA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "And the following in the same way for the player O:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T11:09:50.064194+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T11:49:02.927371+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "9+t55hf9DQCf43p7Cd3GbA=="
							},
							"code" : "bThreadsOWin := linePermutations collect: [ :aLine | \r\t'bp.registerBThread(\"OWin(', aLine asString ,')\", function() {' , \r\tString crlf ,\r\t(aLine flatCollect: [ :aPosition |\r\t    '    bp.sync({ waitFor: bp.EventSet(\"O', aPosition asString ,'\", function(e) {' , String crlf ,\r\t    '        return e.name == \"moveAccepted\" && ', String crlf ,\r\t    '            e.data.player == \"O\" && ' , String crlf ,\r\t    '            e.data.row == ', aPosition x asString , ' && ' , String crlf ,\r\t    '            e.data.col == ', aPosition y asString , '; ', String crlf ,\r\t    '         }) }); ' , String crlf\r\t]) ,\r\t'    bp.sync({ request: bp.Event(\"gameOver\", { winner: \"O\" }) }); ', String crlf ,\r'}); ', String crlf , String crlf].\r\rbtOWin := String streamContents: [ :stream |\r\tbThreadsOWin do: [ :bThread | stream nextPutAll: bThread ] ]"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T10:50:14.98959+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T10:51:17.711186+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "UKdvoBf9DQCDjuFNB28W2A=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Firstly, we will add a {{gtClass:name=BrLabel}} to our game view to show messages to the user:"
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T09:06:06.91685+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T11:03:13.199676+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "u64FLBb9DQCMJkW/A1D7lg=="
										},
										"code" : "Object\r\tsubclass: #Gt4BpTicTacToeGame\r\tinstanceVariableNames: 'cells bpRunner messageLabel'\r\tclassVariableNames: ''\r\tcategory: 'Gt4Bp-TicTacToe-Core'."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T11:03:24.280625+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T11:04:50.734334+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "z1F7zxf9DQCma79iBlpmTQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Now, we should initialize that label to show the messages and update it accordingly each time we receive a game event:"
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T11:04:05.942234+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T12:42:43.805352+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "qgn30Rf9DQCowxF/BlpmTQ=="
										},
										"code" : "Gt4BpTicTacToeGame compile: 'asElement\r\t| board |\r\tboard := BlElement new\r\t\tid: #board;\r\t\tlayout: (BlGridLayout new columnCount: 3);\r\t\tbackground: Color veryVeryLightGray;\r\t\taddChildren: (cells collect: #asElement) flattened;\r\t\tconstraintsDo: [ :c | \r\t\t\tc horizontal exact: 300.\r\t\t\tc vertical exact: 300 ];\r\t\tyourself.\r\tmessageLabel := BrLabel new\r\t\taptitude: BrGlamorousLabelAptitude;\r\t\ttext: (''Let''''s play!'' asRopedText\r\t\t\t\tfontSize: 25;\r\t\t\t\tbold;\r\t\t\t\tforeground: Color darkGray);\r\t\tgeometry: (BlRoundedRectangleGeometry cornerRadius: 10);\r\t\tbackground: Color lightOrange;\r\t\tpadding: (BlInsets all: 15);\r\t\tmargin: (BlInsets top: 20);\r\t\tconstraintsDo: [ :c | \r\t\t\tc horizontal matchParent.\r\t\t\tc vertical fitContent];\r\t\tyourself.\r\t^ BlElement new\r\t\tlayout: BlLinearLayout vertical;\r\t\tconstraintsDo: [ :c | \r\t\t\tc horizontal fitContent.\r\t\t\tc vertical fitContent ];\r\t\taddChildren: {board.\r\t\t\t\tmessageLabel};\r\t\tyourself' classified: #converting.\r\t\t\rGt4BpTicTacToeGame compile: 'handleBPEvent: event\r\tevent name = ''moveAccepted''\r\t\tifTrue: [ | eventData player |\r\t\t\teventData := event data.\r\t\t\tplayer := eventData at: ''player''.\r\t\t\tself\r\t\t\t\tupdateCellAt: (eventData at: ''row'')\r\t\t\t\tcol: (eventData at: ''col'')\r\t\t\t\tplayer: player\t.\r\t\t\tself updateMessage: ''Move '' , player , '' Accepted'' ].\r\tevent name = ''gameOver''\r\t\tifTrue: [ \r\t\t\tself updateMessage: ''Game Over: '' , (event data at: ''winner'') asString , '' wins!'' ]' classified: #'event - handling'.\r\t\t\t\rGt4BpTicTacToeGame compile: 'updateMessage: aString\r\tmessageLabel\r\t\tifNotNil: [ messageLabel\r\t\t\t\ttext: (aString asRopedText\r\t\t\t\t\t\tfontSize: 25;\r\t\t\t\t\t\tbold;\r\t\t\t\t\t\tforeground: Color darkGray) ]' classified: #'view - updating'."
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T09:03:46.178818+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T10:50:11.484211+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "6jCiIxb9DQCJodxiA1D7lg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We should adapt our *ViewModel* to be able to process the new event **gameOver**."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T08:45:45.217075+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T11:37:26.864741+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "1syo4hX9DQC8xdkPAqx4Yg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Now we check manually the game including the previous b-threads:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T08:46:05.320568+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T11:11:25.359818+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "csdm5BX9DQC+CoOVAqx4Yg=="
							},
							"code" : "game := Gt4BpTicTacToeExamples new alterningAndSquareTakenGame.\rgame loadBThread: btXWin named: 'btXWin.js';\r\tloadBThread: btOWin named: 'btOWin.js'.\rgame start."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T08:47:28.66802+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T08:47:30.333175+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "qY5e6RX9DQC/6hQTAqx4Yg=="
							},
							"code" : "game stop"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T11:38:25.323638+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T12:21:07.588807+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "crS2TBj9DQCbX2plBPhU6A=="
										},
										"code" : "Gt4BpTicTacToeExamples compile: '\rbtXWin\r\t<gtExample>\r\t^ self btWinForPlayer: ''X''' classified: #'example - support'.\r\t\rGt4BpTicTacToeExamples compile: '\rbtOWin\r\t<gtExample>\r\t^ self btWinForPlayer: ''O''' classified: #'example - support'.\r\t\rGt4BpTicTacToeExamples compile: '\rbtWinForPlayer: aString\r\t<gtExample>\r    | bThreadsWin |\rbThreadsWin := self linePermutations collect: [ :aLine | \r\t''bp.registerBThread(\"'' , aString , ''Win('', aLine asString ,'')\", function() {'' , \r\tString crlf ,\r\t(aLine flatCollect: [ :aPosition |\r\t    ''    bp.sync({ waitFor: bp.EventSet(\"'', aString , aPosition asString ,''\", function(e) {'' , String crlf ,\r\t    ''        return e.name == \"moveAccepted\" && '', String crlf ,\r\t    ''            e.data.player == \"'', aString , ''\" && '' , String crlf ,\r\t    ''            e.data.row == '', aPosition x asString , '' && '' , String crlf ,\r\t    ''            e.data.col == '', aPosition y asString , ''; '', String crlf ,\r\t    ''         }) }); '' , String crlf\r\t]) ,\r\t''    bp.sync({ request: bp.Event(\"gameOver\", { winner: \"'', aString , ''\" }) }); '', String crlf ,\r''}); '', String crlf , String crlf ].\r\r^ String streamContents: [ :stream |\r\tbThreadsWin do: [ :bThread | stream nextPutAll: bThread ] ]' \r\tclassified: #'example - support'.\r\t\rGt4BpTicTacToeExamples compile: '\rlinePermutations\r\t| linePermutations |\r\tlinePermutations := OrderedCollection empty.\r\tself lines do: [ :line |\r\t\tline permutationsDo: [:each | linePermutations add: each copy ].\r\t].\r\t^ linePermutations' classified: #'example - support'.\r\rGt4BpTicTacToeExamples compile: '\rlines\r\t| horizontals verticals diagonals |\r\thorizontals := {\r\t    { 1@1 . 1@2 . 1@3 } .\r\t    { 2@1 . 2@2 . 2@3 } .\r\t    { 3@1 . 3@2 . 3@3 } }.\r\t    \r\tverticals := {\r\t    { 1@1 . 2@1 . 3@1 } .\r\t    { 1@2 . 2@2 . 3@2 } .\r\t    { 1@3 . 2@3 . 3@3  } }.\r\t    \r\tdiagonals := {\r\t    { 1@1 . 2@2 . 3@3 } .\r\t    { 1@3 . 2@2 . 3@1  } }.\r\t    \r\t^ horizontals , verticals , diagonals' classified: #'example - support'."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T11:54:54.480769+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T11:55:22.870697+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "Ywushxj9DQCqqZYPBPhU6A=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "This is the new example of game with the previous logic plus the new b-threads for detecting a winner:"
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T11:55:28.697923+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T11:56:11.585007+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "2ie2iRj9DQCstirTBPhU6A=="
										},
										"code" : "Gt4BpTicTacToeExamples compile: '\ralterningAndSquareTakenAndWinnerGame\r\t<gtExample>\r\t^ self alterningAndSquareTakenGame\r\t    loadBThread: self btXWin named: ''test-XWin.js'';\r\t\tloadBThread: self btOWin named: ''test-OWin.js'';\r\t\tyourself' classified: #example."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T11:56:26.560835+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T11:58:52.626078+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "+RIpjRj9DQCs6PyaBPhU6A=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Finally, we can define an example that controls the game's UI using a {{gtClass:name=BlScripter}} and checks some assertions:"
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T11:58:08.609276+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T12:43:23.009914+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "zjU+kxj9DQCM75URAA+hAw=="
										},
										"code" : "Gt4BpTicTacToeExamples compile: '\rscripterWithWinnerGame\r\t<gtExample>\r\t<return: #BlScripter>\r\t| game aScripter |\r\tgame := self alterningAndSquareTakenAndWinnerGame.\r\taScripter := self newScripter.\r\taScripter\r\t\tmodel: game; \r\t\telement: game asElement.\r\t\t\r\t[ aScripter\r\t\tdoStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Starts the game'';\r\t\t\t\tblock: [ :model | model start ];\r\t\t\t\tonModel ].\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''X(1, 1)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 1 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''O(3, 1)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 7 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''X(2, 2)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 5 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''O(3, 2)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 8 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''X(3, 3)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 9 ].\r\r\taScripter wait\r\t\tlabel: ''Waits for the state is updated'';\r\t\tforElementCondition: [ :gameElement | \r\t\t\t\t(gameElement children\r\t\t\t\t\tselect: [ :eachCell | (eachCell label asString = '''') not ]) size = 5 ]\r\t\t\ttimeout: 2 seconds;\r\t\tonSpaceRoot;\r\t\t// #board asBlocElementId;\r\t\tplay.\r\r\taScripter\r\t\tcheckStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Check if the message label says X wins'';\r\t\t\t\tvalue: [ :label | label text asString ] equals: [ ''Game Over: X wins!'' ];\r\t\t\t\t// BrLabel ].\r\r\t] ensure: [ \r\t\taScripter\r\t\t\tdoStep: [ :s | \r\t\t\t\ts\r\t\t\t\t\tlabel: ''Stop the game'';\r\t\t\t\t\tblock: [ :model | model stop ];\r\t\t\t\t\tonModel ] ].\r\t\t\r\t^ aScripter' classified: #example.\t\t"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T12:22:54.150649+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T12:23:05.822687+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "0cXJ6xj9DQCcIZptAQxXgw=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "We check if the scripter-based example is passing:"
									},
									{
										"__type" : "exampleSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T12:23:16.212252+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T12:23:16.212252+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "FGga7Rj9DQCdW2dIAQxXgw=="
										},
										"exampleSelector" : "scripterWithWinnerGame",
										"previewHeight" : 200,
										"previewShowSelector" : "gtViewsFor:",
										"exampleBehaviorName" : "Gt4BpTicTacToeExamples",
										"codeExpanded" : true,
										"previewExpanded" : false,
										"noCode" : false
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T11:37:34.735587+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T11:54:46.284793+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "Q8qySRj9DQCY0GLYBPhU6A=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Or we can write new examples to check this logic programmatically...\n\nWe define support methods to return the b-threads we have been playing with previously:\t\t"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-08T22:15:41.272273+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-08T22:17:20.303659+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "FJjpFQ39DQCG9DiTDcuAmA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "##Detecting when a player wins"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T12:50:18.349216+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T12:51:10.218912+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "jEDKTRn9DQCuuar8Be6cWw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "To avoid the game can continue when the *gameOver* event is fired, we add another b-thread responsible to block any other event after the *gameOver*:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T12:51:15.272294+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:21:50.537061+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "R9QuURn9DQCyXysMBe6cWw=="
							},
							"code" : "btGameOver :='bp.registerBThread(\"btGameOver\", function() {\r    var gameOverES = bp.EventSet(\"gameOverES\", function(e) {\r        return e.name == \"gameOver\";\r    });\r    bp.sync({ waitFor: gameOverES });\r    bp.sync({ block: bp.eventSets.all });\r});'"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T12:57:25.763149+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:05:04.660375+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "NxJEZxn9DQC3SwjVBe6cWw=="
							},
							"code" : "game := Gt4BpTicTacToeExamples new alterningAndSquareTakenAndWinnerGame\r\tloadBThread: btGameOver named: 'bt-gameover.js';\r\tstart."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:04:57.008664+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:05:08.492682+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "jIcpghn9DQCVQGrOAOVYNg=="
							},
							"code" : "game stop."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:22:34.849825+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:23:10.359203+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "Heg2wRn9DQCZCuWjAOVYNg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We add new examples to check the logic imposed by this b-thread:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:23:15.503331+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:23:15.503331+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "BDujwxn9DQCaqbN3AOVYNg=="
							},
							"code" : ""
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T12:48:49.012381+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T12:49:18.052054+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "fRR3SBn9DQCtAx7TBe6cWw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "##Finish when game over"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:24:30.924986+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:25:18.618858+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "pxIiyBn9DQCbGcSdAOVYNg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "The game finishes with a draw if all squares has been occupied and any player has won."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:25:26.58942+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:39:22.797768+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "xHFzyxn9DQCdHN/EAOVYNg=="
							},
							"code" : "btDraw := 'bp.registerBThread(\"btDraw\", function() {\r    var moveAcceptedES = bp.EventSet(\"moveAcceptedES\", function(e) {\r        return e.name == \"moveAccepted\";\r    });\r    for (var i = 1; i <= 9; i++) { \r        bp.sync({ waitFor: moveAcceptedES }); \r    }\r    bp.sync({ request: bp.Event(\"gameOver\") });\r});'"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:34:02.851354+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:40:11.344896+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "9fk46hn9DQCiZzWgAOVYNg=="
							},
							"code" : "Gt4BpTicTacToeGame compile: 'handleBPEvent: event\r\tevent name = ''moveAccepted''\r\t\tifTrue: [ | eventData player |\r\t\t\teventData := event data.\r\t\t\tplayer := eventData at: ''player''.\r\t\t\tself\r\t\t\t\tupdateCellAt: (eventData at: ''row'')\r\t\t\t\tcol: (eventData at: ''col'')\r\t\t\t\tplayer: player\t.\r\t\t\tself updateMessage: ''Move '' , player , '' Accepted'' ].\r\tevent name = ''gameOver''\r\t\tifTrue: [\r\t\t    event data \r\t\t        ifNotNil: [ self updateMessage: ''Game Over: '' , (event data at: ''winner'') , '' wins!'' ] \r\t\t    \tifNil: [ self updateMessage: ''Game Over: Draw'' ]\r\t\t\t ]' classified: #'event - handling'."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:27:49.815122+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:28:06.079047+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "WOX80xn9DQCgoLOYAOVYNg=="
							},
							"code" : "game := Gt4BpTicTacToeExamples new alterningAndSquareTakenAndWinnerGame\r\tloadBThread: btGameOver named: 'bt-gameover.js';\r\tloadBThread: btDraw named: 'bt-draw.js';\r\tstart."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:28:09.462519+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T13:28:17.670433+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "zrAo1Rn9DQChgXupAOVYNg=="
							},
							"code" : "game stop\t\t"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T13:23:49.324675+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T13:24:05.44029+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Qk2nxRn9DQCarnN8AOVYNg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "##Detect draw"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-10-07T16:20:43.227879+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-10-09T18:16:51.747833+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Game rules as b-threads"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "78dd9b02-f4fc-0d00-a782-f39206c46e4c"
	}
}