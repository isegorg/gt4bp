{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-02T10:41:06.915804+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-02T10:42:28.31396+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Cru+hIr8DQCJNpkrDEfBTA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The architecture proposed is a variant of  the classical MVVM (Model-View-ViewModel) adapted to the use of Behavioral Programming. We can name it as BVVM after Behaviors-View-ViewModel."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-02T10:44:32.652153+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-02T10:44:57.935819+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "9AeRtor8DQCQqu+xDEfBTA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "[[Minimal visual infrastructure in GToolkit]]"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-02T10:42:32.591988+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-03T12:32:11.829009+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "7HP8s4r8DQCOFvOQDEfBTA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "We start defining a minimal infrastructure for the game presentation, for the moment defering the game logic:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-03T12:36:36.866476+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-03T12:36:57.437718+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "jSrHaaD8DQCV2KKBACGg2Q=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "[[Game rules as a B-Program]]"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-03T12:32:33.366542+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-03T12:36:33.527068+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "tXZgWqD8DQCM4mZIACGg2Q=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Now we a very basic model representing the game's state (*ViewModel*) and its graphical representation (*View*).\n\nWe're going to define the game rules as *Behaviors* (a B-Program) and to connect the already defined *ViewModel* with that B-Program running on the BPjs Runner:"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-10-02T10:29:19.991373+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-10-03T12:37:09.038772+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Implementing the Tic Tac Toe game using BP"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "a455be84-8afc-0d00-8935-4f800c47c14c"
	}
}