{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T19:49:27.691449+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T19:51:23.841624+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "4cTOKB/9DQCk3ecXCjcmGQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The previous b-thread checks draw in a very naive way. It only counts the number of squares taken, but what if a player wins in her last move? \n\nIn that case, we'll have two b-threads requesting at same time the winner and draw events."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T19:49:27.691576+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T19:49:27.691576+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "e8XOKB/9DQCk3s3xCjcmGQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "We can write an example to show a sequence of moves that ends with all squares taken and with X player as winner:"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T19:49:27.691681+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-11T19:02:59.744582+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "rMXOKB/9DQCk36UvCjcmGQ=="
				},
				"code" : "Gt4BpTicTacToeExamples compile: '\rscripterWithAllRulesGameCheckDrawWinnerConflict\r\t<gtExample>\r\t<return: #BlScripter>\r\t| game aScripter |\r\tgame := self allRulesGame.\r\taScripter := self newScripter.\r\taScripter\r\t\tmodel: game; \r\t\telement: game asElement.\r\t\t\r\t[ aScripter\r\t\tdoStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Starts the game'';\r\t\t\t\tblock: [ :model | model start ];\r\t\t\t\tonModel ].\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''X(1, 1)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 1 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''O(1, 2)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 2 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''X(2, 2)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 5 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''O(1, 3)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 3 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''X(2, 1)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 4 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''O(2, 3)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 6 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''X(3, 2)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 8 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''O(3, 1)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 7 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''X(3, 3)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 9 ].\r\r\taScripter wait\r\t\tlabel: ''Waits for the state is updated'';\r\t\tforElementCondition: [ :gameElement | \r\t\t\t\t(gameElement children\r\t\t\t\t\tselect: [ :eachCell | (eachCell label asString = '''') not ]) size = 9 ]\r\t\t\ttimeout: 5 seconds;\r\t\tonSpaceRoot;\r\t\t// #board asBlocElementId;\r\t\tplay.\r\r\taScripter\r\t\tcheckStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Check if the message label says X Win'';\r\t\t\t\tvalue: [ :label | label text asString ] equals: [ ''Game Over: X wins!'' ];\r\t\t\t\t// BrLabel ].\r\r\t] ensure: [ \r\t\taScripter\r\t\t\tdoStep: [ :s | \r\t\t\t\ts\r\t\t\t\t\tlabel: ''Stop the game'';\r\t\t\t\t\tblock: [ :model | model stop ];\r\t\t\t\t\tonModel ] ].\r\t\t\r\t^ aScripter' classified: #example."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T19:49:27.691704+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T19:49:27.691704+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "vcXOKB/9DQCk4LfHCjcmGQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "As the b-thread coordinator will choose between both requested events equally, the previous example sometimes will pass, but other will fail:"
			},
			{
				"__type" : "exampleSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T19:49:27.691716+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T19:49:27.691716+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "zMXOKB/9DQCk4ZeJCjcmGQ=="
				},
				"exampleSelector" : "scripterWithAllRulesGameCheckDrawWinnerConflict",
				"previewHeight" : 200,
				"previewShowSelector" : "gtViewsFor:",
				"exampleBehaviorName" : "Gt4BpTicTacToeExamples",
				"codeExpanded" : true,
				"previewExpanded" : false,
				"noCode" : false
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-11T18:54:53.246428+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-11T19:05:51.629619+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "HXRRoUb9DQCSBTouAqWGBQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "##Assinging priorities to synchronization points"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-11T18:55:22.873664+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-11T18:58:38.718362+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "gIcVo0b9DQCS/P5tAqWGBQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "We can solve this conflict assigning an specific priority to each of these events, so the b-thread coordinator choose the winner over the draw event in case of conflict."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-11T18:58:42.214735+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-11T18:59:46.395967+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "jjv3rkb9DQCaq9AmAqWGBQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "For instance, we can redefine the b-threads to assign a priority of 10 to the winner even and a priority of 9 to the draw event:"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-11T18:59:53.248755+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-11T19:04:45.042826+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "MSAzs0b9DQCd1/TfAqWGBQ=="
				},
				"code" : "Gt4BpTicTacToeExamples compile: '\rbtWinForPlayer: aString\r\t<gtExample>\r    | bThreadsWin |\rbThreadsWin := self linePermutations collect: [ :aLine | \r\t''bp.registerBThread(\"'' , aString , ''Win('', aLine asString ,'')\", function() {'' , \r\tString crlf ,\r\t(aLine flatCollect: [ :aPosition |\r\t    ''    bp.sync({ waitFor: bp.EventSet(\"'', aString , aPosition asString ,''\", function(e) {'' , String crlf ,\r\t    ''        return e.name == \"moveAccepted\" && '', String crlf ,\r\t    ''            e.data.player == \"'', aString , ''\" && '' , String crlf ,\r\t    ''            e.data.row == '', aPosition x asString , '' && '' , String crlf ,\r\t    ''            e.data.col == '', aPosition y asString , ''; '', String crlf ,\r\t    ''         }) }); '' , String crlf\r\t]) ,\r\t''    bp.sync({ request: bp.Event(\"gameOver\", { winner: \"'', aString , ''\" }) }, 10); '', String crlf ,\r''}); '', String crlf , String crlf ].\r\r^ String streamContents: [ :stream |\r\tbThreadsWin do: [ :bThread | stream nextPutAll: bThread ] ]' \r\tclassified: #'example - support'.\r\t\rGt4BpTicTacToeExamples compile: '\rbtDraw\r    <gtExample>\r    ^ ''bp.registerBThread(\"btDraw\", function() {\r    var moveAcceptedES = bp.EventSet(\"moveAcceptedES\", function(e) {\r        return e.name == \"moveAccepted\";\r    });\r    for (var i = 1; i <= 9; i++) { \r        bp.sync({ waitFor: moveAcceptedES }); \r    }\r    bp.sync({ request: bp.Event(\"gameOver\") }, 9);\r});''' classified: #'example - support'."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-11T19:05:59.063481+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-11T19:06:35.103597+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "9wMByUb9DQCemLuJAqWGBQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "After these adjustments, if you check again the previous example, you can check that it always passes successfully."
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-10-09T19:46:13.44692+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-10-09T19:46:13.44692+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Resolving conflicts between Winner and Draw b-threads"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "77d43a1d-1ffd-0d00-a420-87190a372619"
	}
}