{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153209+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153209+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "atxRvh39DQCKLknLDgJinQ=="
							},
							"code" : "horizontals := {\r    { 1@1 . 1@2 . 1@3 } .\r    { 2@1 . 2@2 . 2@3 } .\r    { 3@1 . 3@2 . 3@3 } }.\r    \rverticals := {\r    { 1@1 . 2@1 . 3@1 } .\r    { 1@2 . 2@2 . 3@2 } .\r    { 1@3 . 2@3 . 3@3  } }.\r    \rdiagonals := {\r    { 1@1 . 2@2 . 3@3 } .\r    { 1@3 . 2@2 . 3@1  } }.\r    \rlines := horizontals , verticals , diagonals"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153386+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153386+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "tdxRvh39DQCKL+MWDgJinQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Each of these 8 lines can be completed in any order, so a player can win completing the line in any of the following 48 possible permutations:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153423+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153423+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "1dxRvh39DQCKMPhTDgJinQ=="
							},
							"code" : "linePermutations := OrderedCollection empty.\rlines do: [ :line |\r\tline permutationsDo: [:each | linePermutations add: each copy ].\r].\rlinePermutations"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153432+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153432+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "3NxRvh39DQCKMT7SDgJinQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We can define the following b-threads to check the player X win conditions:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153438+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153438+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "4dxRvh39DQCKMl+KDgJinQ=="
							},
							"code" : "bThreadsXWin := linePermutations collect: [ :aLine | \r\t'bp.registerBThread(\"XWin(', aLine asString ,')\", function() {' , \r\tString crlf ,\r\t(aLine flatCollect: [ :aPosition |\r\t    '    bp.sync({ waitFor: bp.EventSet(\"X', aPosition asString ,'\", function(e) {' , String crlf ,\r\t    '        return e.name == \"moveAccepted\" && ', String crlf ,\r\t    '            e.data.player == \"X\" && ' , String crlf ,\r\t    '            e.data.row == ', aPosition x asString , ' && ' , String crlf ,\r\t    '            e.data.col == ', aPosition y asString , '; ', String crlf ,\r\t    '         }) }); ' , String crlf\r\t]) ,\r\t'    bp.sync({ request: bp.Event(\"gameOver\", { winner: \"X\" }) }); ', String crlf ,\r'}); ', String crlf , String crlf\t\t\t\t\t\t ].\r\rbtXWin := String streamContents: [ :stream |\r\tbThreadsXWin do: [ :bThread | stream nextPutAll: bThread ] ]"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153442+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153442+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "5txRvh39DQCKM4bUDgJinQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "And the following in the same way for the player O:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153447+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153447+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "69xRvh39DQCKNOxbDgJinQ=="
							},
							"code" : "bThreadsOWin := linePermutations collect: [ :aLine | \r\t'bp.registerBThread(\"OWin(', aLine asString ,')\", function() {' , \r\tString crlf ,\r\t(aLine flatCollect: [ :aPosition |\r\t    '    bp.sync({ waitFor: bp.EventSet(\"O', aPosition asString ,'\", function(e) {' , String crlf ,\r\t    '        return e.name == \"moveAccepted\" && ', String crlf ,\r\t    '            e.data.player == \"O\" && ' , String crlf ,\r\t    '            e.data.row == ', aPosition x asString , ' && ' , String crlf ,\r\t    '            e.data.col == ', aPosition y asString , '; ', String crlf ,\r\t    '         }) }); ' , String crlf\r\t]) ,\r\t'    bp.sync({ request: bp.Event(\"gameOver\", { winner: \"O\" }) }); ', String crlf ,\r'}); ', String crlf , String crlf].\r\rbtOWin := String streamContents: [ :stream |\r\tbThreadsOWin do: [ :bThread | stream nextPutAll: bThread ] ]"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153459+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153459+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "9txRvh39DQCKNoIIDgJinQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Firstly, we will add a {{gtClass:name=BrLabel}} to our game view to show messages to the user:"
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153464+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153464+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "+9xRvh39DQCKNxWZDgJinQ=="
										},
										"code" : "Object\r\tsubclass: #Gt4BpTicTacToeGame\r\tinstanceVariableNames: 'cells bpRunner messageLabel'\r\tclassVariableNames: ''\r\tcategory: 'Gt4Bp-TicTacToe-Core'."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153471+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153471+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "A91Rvh39DQCKOAokDgJinQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Now, we should initialize that label to show the messages and update it accordingly each time we receive a game event:"
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153478+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153478+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "Cd1Rvh39DQCKOc74DgJinQ=="
										},
										"code" : "Gt4BpTicTacToeGame compile: 'asElement\r\t| board |\r\tboard := BlElement new\r\t\tid: #board;\r\t\tlayout: (BlGridLayout new columnCount: 3);\r\t\tbackground: Color veryVeryLightGray;\r\t\taddChildren: (cells collect: #asElement) flattened;\r\t\tconstraintsDo: [ :c | \r\t\t\tc horizontal exact: 300.\r\t\t\tc vertical exact: 300 ];\r\t\tyourself.\r\tmessageLabel := BrLabel new\r\t\taptitude: BrGlamorousLabelAptitude;\r\t\ttext: (''Let''''s play!'' asRopedText\r\t\t\t\tfontSize: 25;\r\t\t\t\tbold;\r\t\t\t\tforeground: Color darkGray);\r\t\tgeometry: (BlRoundedRectangleGeometry cornerRadius: 10);\r\t\tbackground: Color lightOrange;\r\t\tpadding: (BlInsets all: 15);\r\t\tmargin: (BlInsets top: 20);\r\t\tconstraintsDo: [ :c | \r\t\t\tc horizontal matchParent.\r\t\t\tc vertical fitContent];\r\t\tyourself.\r\t^ BlElement new\r\t\tlayout: BlLinearLayout vertical;\r\t\tconstraintsDo: [ :c | \r\t\t\tc horizontal fitContent.\r\t\t\tc vertical fitContent ];\r\t\taddChildren: {board.\r\t\t\t\tmessageLabel};\r\t\tyourself' classified: #converting.\r\t\t\rGt4BpTicTacToeGame compile: 'handleBPEvent: event\r\tevent name = ''moveAccepted''\r\t\tifTrue: [ | eventData player |\r\t\t\teventData := event data.\r\t\t\tplayer := eventData at: ''player''.\r\t\t\tself\r\t\t\t\tupdateCellAt: (eventData at: ''row'')\r\t\t\t\tcol: (eventData at: ''col'')\r\t\t\t\tplayer: player\t.\r\t\t\tself updateMessage: ''Move '' , player , '' Accepted'' ].\r\tevent name = ''gameOver''\r\t\tifTrue: [ \r\t\t\tself updateMessage: ''Game Over: '' , (event data at: ''winner'') asString , '' wins!'' ]' classified: #'event - handling'.\r\t\t\t\rGt4BpTicTacToeGame compile: 'updateMessage: aString\r\tmessageLabel\r\t\tifNotNil: [ messageLabel\r\t\t\t\ttext: (aString asRopedText\r\t\t\t\t\t\tfontSize: 25;\r\t\t\t\t\t\tbold;\r\t\t\t\t\t\tforeground: Color darkGray) ]' classified: #'view - updating'."
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153454+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153454+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "8dxRvh39DQCKNXIXDgJinQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We should adapt our *ViewModel* to be able to process the new event **gameOver**."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153486+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153486+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "Ed1Rvh39DQCKOha4DgJinQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Now we check manually the game including the previous b-threads:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153491+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153491+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "Ft1Rvh39DQCKO8rpDgJinQ=="
							},
							"code" : "game := Gt4BpTicTacToeExamples new alterningAndSquareTakenGame.\rgame loadBThread: btXWin named: 'btXWin.js';\r\tloadBThread: btOWin named: 'btOWin.js'.\rgame start."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153495+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153495+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "Gt1Rvh39DQCKPIscDgJinQ=="
							},
							"code" : "game stop"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.15351+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.15351+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "Kd1Rvh39DQCKPmbNDgJinQ=="
										},
										"code" : "Gt4BpTicTacToeExamples compile: '\rbtXWin\r\t<gtExample>\r\t^ self btWinForPlayer: ''X''' classified: #'example - support'.\r\t\rGt4BpTicTacToeExamples compile: '\rbtOWin\r\t<gtExample>\r\t^ self btWinForPlayer: ''O''' classified: #'example - support'.\r\t\rGt4BpTicTacToeExamples compile: '\rbtWinForPlayer: aString\r\t<gtExample>\r    | bThreadsWin |\rbThreadsWin := self linePermutations collect: [ :aLine | \r\t''bp.registerBThread(\"'' , aString , ''Win('', aLine asString ,'')\", function() {'' , \r\tString crlf ,\r\t(aLine flatCollect: [ :aPosition |\r\t    ''    bp.sync({ waitFor: bp.EventSet(\"'', aString , aPosition asString ,''\", function(e) {'' , String crlf ,\r\t    ''        return e.name == \"moveAccepted\" && '', String crlf ,\r\t    ''            e.data.player == \"'', aString , ''\" && '' , String crlf ,\r\t    ''            e.data.row == '', aPosition x asString , '' && '' , String crlf ,\r\t    ''            e.data.col == '', aPosition y asString , ''; '', String crlf ,\r\t    ''         }) }); '' , String crlf\r\t]) ,\r\t''    bp.sync({ request: bp.Event(\"gameOver\", { winner: \"'', aString , ''\" }) }); '', String crlf ,\r''}); '', String crlf , String crlf ].\r\r^ String streamContents: [ :stream |\r\tbThreadsWin do: [ :bThread | stream nextPutAll: bThread ] ]' \r\tclassified: #'example - support'.\r\t\rGt4BpTicTacToeExamples compile: '\rlinePermutations\r\t| linePermutations |\r\tlinePermutations := OrderedCollection empty.\r\tself lines do: [ :line |\r\t\tline permutationsDo: [:each | linePermutations add: each copy ].\r\t].\r\t^ linePermutations' classified: #'example - support'.\r\rGt4BpTicTacToeExamples compile: '\rlines\r\t| horizontals verticals diagonals |\r\thorizontals := {\r\t    { 1@1 . 1@2 . 1@3 } .\r\t    { 2@1 . 2@2 . 2@3 } .\r\t    { 3@1 . 3@2 . 3@3 } }.\r\t    \r\tverticals := {\r\t    { 1@1 . 2@1 . 3@1 } .\r\t    { 1@2 . 2@2 . 3@2 } .\r\t    { 1@3 . 2@3 . 3@3  } }.\r\t    \r\tdiagonals := {\r\t    { 1@1 . 2@2 . 3@3 } .\r\t    { 1@3 . 2@2 . 3@1  } }.\r\t    \r\t^ horizontals , verticals , diagonals' classified: #'example - support'."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153515+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153515+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "Lt1Rvh39DQCKPy8fDgJinQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "This is the new example of game with the previous logic plus the new b-threads for detecting a winner:"
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153519+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153519+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "Mt1Rvh39DQCKQMrVDgJinQ=="
										},
										"code" : "Gt4BpTicTacToeExamples compile: '\ralterningAndSquareTakenAndWinnerGame\r\t<gtExample>\r\t^ self alterningAndSquareTakenGame\r\t    loadBThread: self btXWin named: ''test-XWin.js'';\r\t\tloadBThread: self btOWin named: ''test-OWin.js'';\r\t\tyourself' classified: #example."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153524+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153524+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "N91Rvh39DQCKQaJmDgJinQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Finally, we can define an example that controls the game's UI using a {{gtClass:name=BlScripter}} and checks some assertions:"
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153528+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T19:21:11.242251+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "O91Rvh39DQCKQhFIDgJinQ=="
										},
										"code" : "Gt4BpTicTacToeExamples compile: '\rscripterWithWinnerGame\r\t<gtExample>\r\t<return: #BlScripter>\r\t| game aScripter |\r\tgame := self alterningAndSquareTakenAndWinnerGame.\r\taScripter := self newScripter.\r\taScripter\r\t\tmodel: game; \r\t\telement: game asElement.\r\t\t\r\t[ aScripter\r\t\tdoStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Starts the game'';\r\t\t\t\tblock: [ :model | model start ];\r\t\t\t\tonModel ].\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''X(1, 1)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 1 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''O(3, 1)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 7 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''X(2, 2)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 5 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''O(3, 2)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 8 ].\r\t\t\t\t\r\taScripter\r\t\tclickStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''X(3, 3)'';\r\t\t\t\t// BrButton;\r\t\t\t\t@ 9 ].\r\r\taScripter wait\r\t\tlabel: ''Waits for the state is updated'';\r\t\tforElementCondition: [ :gameElement | \r\t\t\t\t(gameElement children\r\t\t\t\t\tselect: [ :eachCell | (eachCell label asString = '''') not ]) size = 5 ]\r\t\t\ttimeout: 2 seconds;\r\t\tonSpaceRoot;\r\t\t// #board asBlocElementId;\r\t\tplay.\r\r\taScripter\r\t\tcheckStep: [ :s | \r\t\t\ts\r\t\t\t\tlabel: ''Check if the message label says X wins'';\r\t\t\t\tvalue: [ :label | label text asString ] equals: [ ''Game Over: X wins!'' ];\r\t\t\t\t// BrLabel ].\r\r\t] ensure: [ \r\t\taScripter\r\t\t\tdoStep: [ :s | \r\t\t\t\ts\r\t\t\t\t\tlabel: ''Stop the game'';\r\t\t\t\t\tblock: [ :model | model stop ];\r\t\t\t\t\tonModel ] ].\r\t\t\r\t^ aScripter' classified: #example."
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153534+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153534+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "Qd1Rvh39DQCKQ8N/DgJinQ=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "We check if the scripter-based example is passing:"
									},
									{
										"__type" : "exampleSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153541+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2025-10-09T18:08:06.153541+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "Sd1Rvh39DQCKRARFDgJinQ=="
										},
										"exampleSelector" : "scripterWithWinnerGame",
										"previewHeight" : 200,
										"previewShowSelector" : "gtViewsFor:",
										"exampleBehaviorName" : "Gt4BpTicTacToeExamples",
										"codeExpanded" : true,
										"previewExpanded" : false,
										"noCode" : false
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153504+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-10-09T18:08:06.153504+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "I91Rvh39DQCKPfYXDgJinQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Or we can write new examples to check this logic programmatically...\n\nWe define support methods to return the b-threads we have been playing with previously:\t\t"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T18:08:06.153097+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-10-09T18:08:06.153097+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "vttRvh39DQCKLS1ZDgJinQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "In order to detect if a player wins the game we create a group of b-threads, each of them waiting for an specific player placing her tokens in the squares of a particular line (horizontal, vertical or diagonal) and possible permutation.\n\nIn the 3x3 game we have the following 8 lines (3 horizontal lines, 3 vertical lines and 2 diagonal lines):"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-10-09T17:54:23.244645+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-10-09T17:54:23.244645+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Detect winner"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "dc44458d-1dfd-0d00-87a7-09130e02629d"
	}
}